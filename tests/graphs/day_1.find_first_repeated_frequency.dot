strict digraph {
    ranksep="1.0";
    node [shape="box" style="rounded" fontname="FiraCode Nerd Font"];
    edge [fontname="FiraCode Nerd Font"];

    1 [label="if frequencies_encountered is None or not frequencies_encountered:"][style="rounded, bold"];
    1 -> 2 [label="False"][color=red4 fontcolor=red4];
    1 -> 3 [label="True"][color=green4 fontcolor=green4];

    2 [label="for frequency_change in frequency_changes:"];
    2 -> 4 [label="StopIteration"][color=red4 fontcolor=red4];
    2 -> 5 [color=green4 fontcolor=green4];

    3 [label="frequencies_encountered = {current_frequency}"];
    3 -> 2;

    4 [label="return find_first_repeated_frequency(...)"];
    4 -> 1;

    5 [label="current_frequency += frequency_change\l\lif current_frequency in frequencies_encountered:\l"];
    5 -> 6 [label="False"][color=red4 fontcolor=red4];
    5 -> 7 [label="True"][color=green4 fontcolor=green4];

    6 [label="frequencies_encountered.add(...)"];
    6 -> 2;

    7 [label="return current_frequency"][style="diagonals"];
}

// start:       [style="rounded, bold"]
// end:         [style="diagonals"]
// hidden end:  [style="dashed, diagonals"]
// false:       [color=red4 fontcolor=red4]
// true:        [color=green4 fontcolor=green4]
